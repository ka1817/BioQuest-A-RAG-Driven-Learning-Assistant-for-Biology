name: Test and Deploy BioRAG to EC2

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          pip install --no-cache-dir -r requirements.txt
          pip install uvicorn httpx pytest

      - name: Set Environment Variables
        run: echo "GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}" >> $GITHUB_ENV

      - name: Start FastAPI Server
        run: |
          uvicorn main:app --host 0.0.0.0 --port 2000 &
          for i in {1..10}; do
            if curl -f http://localhost:2000/docs; then
              echo "✅ FastAPI is up!"
              break
            fi
            echo "⏳ Waiting for FastAPI to start... ($i/10)"
            sleep 2
          done

      - name: Run Tests
        run: |
          if [ -z "${{ secrets.GROQ_API_KEY }}" ]; then
            echo "❌ GROQ_API_KEY is missing! Skipping tests..."
            exit 1
          fi
          PYTHONPATH=$(pwd) pytest tests/ --maxfail=5 --disable-warnings

  deploy:
    runs-on: ubuntu-latest
    needs: test  # Only deploy if tests passed

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/biorag-backend:latest -f backend.Dockerfile .
          docker build -t ${{ secrets.DOCKER_USERNAME }}/biorag-frontend:latest -f frontend.Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/biorag-backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/biorag-frontend:latest

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            # Clean up old containers, volumes, and unused resources
            docker-compose down --volumes --remove-orphans || true
            docker system prune -af || true

            # Pull the latest images
            docker pull ${{ secrets.DOCKER_USERNAME }}/biorag-backend:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/biorag-frontend:latest

            # Create a fresh docker-compose.yml with the latest images
            cat > docker-compose.yml <<EOF
            version: '3.8'

            services:
              backend:
                image: ${{ secrets.DOCKER_USERNAME }}/biorag-backend:latest
                ports:
                  - "2000:2000"
                environment:
                  - GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}
                restart: always

              frontend:
                image: ${{ secrets.DOCKER_USERNAME }}/biorag-frontend:latest
                ports:
                  - "8501:8501"
                depends_on:
                  - backend
                restart: always
            EOF

            # Start the containers with the latest images
            docker-compose up -d
